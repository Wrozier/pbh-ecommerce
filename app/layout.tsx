import type { Metadata } from "next/types";
import { ClerkProvider } from "@clerk/nextjs";
import { SanityLive } from "@/sanity/lib/live";
import { Toaster } from "react-hot-toast";
import { VisualEditing } from "next-sanity";
import { draftMode } from "next/headers";
import DisableDraftMode from "@/components/DisableDraftMode";
import './fonts/Poppins-Regular.woff2';
import { Poppins } from "next/font/google";
import "./globals.css";

// Load Poppins font with fallback
// Configure Poppins font from local file

const poppins = Poppins({
  weight: ["400", "600", "700"],
  style: ["normal"],
  subsets: ["latin"],
  variable: "--font-poppins",
  display: "swap",
  preload: false,
});


export const metadata: Metadata = {
  title: "Ecommerce App for Shoppers",
  description: "Generated by create next app",
  keywords: ["ecommerce", "shopping", "nextjs", "sanity", "clerk"],
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  try {
    const { isEnabled } = await draftMode();

    return (
      <ClerkProvider>
        <html lang="en" className={poppins.variable}>
          <body className="antialiased">
            {isEnabled && (
              <>
                <DisableDraftMode />
                <VisualEditing />
              </>
            )}
            {children}
            <Toaster
              position="bottom-right"
              toastOptions={{
                style: {
                  background: "#000",
                  color: "#fff",
                },
              }}
            />
            <SanityLive />
          </body>
        </html>
      </ClerkProvider>
    );
  } catch (error) {
    const err = error as Error;
    console.error('RootLayout error:', err);
    return (
      <html lang="en">
        <body>
          <div>Error loading layout: {err.message}</div>
        </body>
      </html>
    );
  }
}